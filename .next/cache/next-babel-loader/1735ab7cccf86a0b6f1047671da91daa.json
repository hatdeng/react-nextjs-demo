{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nexport default (Comp => {\n  return function TestHocComp(_ref) {\n    let {\n      Component,\n      pageProps\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, [\"Component\", \"pageProps\"]);\n\n    console.log(Component, pageProps);\n\n    if (pageProps) {\n      pageProps.test = '123';\n    }\n\n    return __jsx(Comp, {\n      Component: Component,\n      pageProps: pageProps\n    });\n  };\n});","map":{"version":3,"sources":["D:/react/nextjs-project/lib/test-hoc.js"],"names":["Comp","TestHocComp","Component","pageProps","rest","console","log","test"],"mappings":";;;;;;;AACA,gBAAgBA,IAAD,IAAU;AAErB,SAAO,SAASC,WAAT,OAAwD;AAAA,QAAlC;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAkC;AAAA,QAAPC,IAAO;;AAC3DC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuBC,SAAvB;;AACA,QAAIA,SAAJ,EAAe;AACXA,MAAAA,SAAS,CAACI,IAAV,GAAiB,KAAjB;AACH;;AACD,WAAO,MAAC,IAAD;AAAM,MAAA,SAAS,EAAIL,SAAnB;AAA8B,MAAA,SAAS,EAAEC;AAAzC,MAAP;AACH,GAND;AAOH,CATD","sourcesContent":["\r\nexport default (Comp) => {\r\n   \r\n    return function TestHocComp ({ Component, pageProps, ...rest}) {\r\n        console.log(Component, pageProps)\r\n        if (pageProps) {\r\n            pageProps.test = '123'\r\n        }\r\n        return <Comp Component = {Component} pageProps={pageProps} />\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}