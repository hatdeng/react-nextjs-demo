{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport getConfig from 'next/config';\nconst {\n  publicRuntimeConfig\n} = getConfig();\nimport { add } from '../store/store';\nconst events = ['routeChangeStart', 'routeChangeComplete', 'routeChangeError', 'beforeHistoryChange', 'hashChangeStart', 'hashChangeComplete'];\n\nfunction makeEvent(type) {\n  return (...args) => {\n    console.log(type, ...args);\n  };\n}\n\nevents.forEach(event => {\n  Router.events.on(event, makeEvent(event));\n});\n\nconst Index = ({\n  counter,\n  username,\n  rename,\n  add\n}) => {\n  function goToTestB() {\n    Router.push({\n      pathname: '/test/b',\n      query: {\n        id: 2\n      }\n    }, 'test/b/2');\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"br\", null), \"bofore boday\", __jsx(\"br\", null), __jsx(\"span\", {\n    className: \"test\"\n  }, \"Index\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"input\", {\n    value: username,\n    onChange: e => rename(e.target.value)\n  }), __jsx(\"button\", {\n    onClick: () => add(counter)\n  }, \"Do ADD\"), __jsx(\"br\", null), __jsx(\"br\", null), \"This is index page \", __jsx(_Button, {\n    className: \"primary\"\n  }, \"Button Click me\"), __jsx(\"br\", null), __jsx(\"p\", null, __jsx(Link, {\n    href: \"/a?id=10000\",\n    as: \"/a/10000\"\n  }, __jsx(\"a\", null, __jsx(\"span\", null, \"This is a link to a\"), __jsx(\"i\", null, \"This is a link to a\"), \"go to AAA\"))), __jsx(_Button, {\n    onClick: goToTestB\n  }, \" Test b\"), __jsx(\"br\", null), __jsx(\"span\", null, \"count: \", counter), __jsx(\"br\", null), __jsx(\"span\", null, \"username: \", username), __jsx(\"br\", null), __jsx(\"a\", {\n    href: publicRuntimeConfig.OAUTH_URL\n  }, \" Go to Login\"));\n};\n\nIndex.getInitialProps = async ({\n  reduxStore\n}) => {\n  reduxStore.dispatch(add(3));\n  return {};\n};\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    counter: state.counter.count,\n    username: state.user.username\n  };\n}, function mapDispatchToProps(dispatch) {\n  return {\n    add: num => dispatch({\n      type: 'ADD',\n      num\n    }),\n    rename: name => dispatch({\n      type: 'UPDATE_USERNAME',\n      name\n    })\n  };\n})(Index);","map":{"version":3,"sources":["D:/react/nextjs-project/pages/index.js"],"names":["useEffect","axios","Link","Router","connect","getConfig","publicRuntimeConfig","add","events","makeEvent","type","args","console","log","forEach","event","on","Index","counter","username","rename","goToTestB","push","pathname","query","id","e","target","value","OAUTH_URL","getInitialProps","reduxStore","dispatch","mapStateToProps","state","count","user","mapDispatchToProps","num","name"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Link from 'next/link'\r\nimport { Button } from \"antd\"\r\nimport Router from 'next/router'\r\nimport { connect } from 'react-redux'\r\nimport getConfig from 'next/config'\r\n\r\nconst { publicRuntimeConfig } = getConfig()\r\n\r\nimport { add } from '../store/store'\r\nconst events = [\r\n    'routeChangeStart',\r\n    'routeChangeComplete',\r\n    'routeChangeError',\r\n    'beforeHistoryChange',\r\n    'hashChangeStart',\r\n    'hashChangeComplete',\r\n]\r\n\r\nfunction makeEvent(type) {\r\n    return (...args) => {\r\n        console.log(type, ...args)\r\n    }\r\n}\r\n\r\nevents.forEach(event =>{\r\n    Router.events.on(event, makeEvent(event))\r\n})\r\n\r\nconst Index =  ({counter, username, rename, add})=>{\r\n    function goToTestB () {\r\n        Router.push({\r\n            pathname: '/test/b',\r\n            query:{\r\n                id: 2\r\n            }\r\n        }, 'test/b/2')\r\n    }\r\n    return (\r\n        <>  \r\n            <br />\r\n            bofore boday\r\n            <br />\r\n            <span className=\"test\">Index</span>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <input value={username} onChange={(e) => rename(e.target.value)} />\r\n            <button onClick={()=> add(counter)}>Do ADD</button>\r\n            <br />\r\n            <br />\r\n            This is index page <Button className=\"primary\">Button Click me</Button><br />\r\n            <p>\r\n                <Link href=\"/a?id=10000\" as=\"/a/10000\">\r\n                    <a>\r\n                    <span>This is a link to a</span>\r\n                    <i>This is a link to a</i>\r\n                    go to AAA\r\n                    </a>\r\n                </Link>\r\n            </p>\r\n\r\n            <Button onClick={goToTestB}> Test b</Button>\r\n            <br />\r\n            <span>count: {counter}</span><br />\r\n            <span>username: {username}</span>\r\n\r\n            <br />\r\n            <a href={publicRuntimeConfig.OAUTH_URL}> Go to Login</a>\r\n        </>\r\n    )\r\n}\r\n\r\nIndex.getInitialProps = async({ reduxStore })=>{\r\n    reduxStore.dispatch(add(3))\r\n    return {}\r\n}\r\n\r\nexport default connect(function mapStateToProps(state){\r\n    return {\r\n        counter: state.counter.count,\r\n        username: state.user.username,\r\n    }\r\n}, function mapDispatchToProps(dispatch){\r\n    return  {\r\n        add: (num) => dispatch({type: 'ADD', num }),\r\n        rename: (name) => dispatch({type: 'UPDATE_USERNAME', name}),\r\n    }\r\n})(Index)"]},"metadata":{},"sourceType":"module"}