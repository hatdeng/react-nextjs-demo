{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useReducer, useContext, useLayoutEffect, useEffect, useRef } from 'react';\n\nfunction countReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1;\n\n    case 'minus':\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nfunction MyCountFunc() {\n  var _useReducer = useReducer(countReducer, 0),\n      count = _useReducer[0],\n      dispatchCount = _useReducer[1];\n\n  var _useState = useState('Jokcy'),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var config = {\n    text: \"Count is \".concat(count),\n    color: count > 3 ? 'red' : 'blue'\n  };\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    value: name,\n    onChange: function onChange(e) {\n      setName(e.target.value);\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      dispatchCount({\n        type: 'add'\n      });\n    }\n  }, count), __jsx(Child, {\n    config: config,\n    onButtonClick: function onButtonClick() {\n      return dispatchCount({\n        type: 'add'\n      });\n    }\n  }));\n}\n\nfunction Child(_ref) {\n  var onButtonClick = _ref.onButtonClick,\n      config = _ref.config;\n  console.log('child render');\n  return __jsx(\"button\", {\n    onClick: onButtonClick,\n    style: {\n      color: config.color\n    }\n  }, config.text);\n}\n\nexport default MyCountFunc;","map":{"version":3,"sources":["D:/react/nextjs-project/pages/test/b.js"],"names":["Head","React","useState","useReducer","useContext","useLayoutEffect","useEffect","useRef","countReducer","state","action","type","MyCountFunc","count","dispatchCount","name","setName","config","text","color","e","target","value","Child","onButtonClick","console","log"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,IACIC,QADJ,EAEIC,UAFJ,EAGIC,UAHJ,EAIIC,eAJJ,EAKIC,SALJ,EAMIC,MANJ,QAOO,OAPP;;AAWA,SAASC,YAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAOF,KAAK,GAAG,CAAf;;AACJ,SAAK,OAAL;AACI,aAAOA,KAAK,GAAE,CAAd;;AACJ;AACA,aAAOA,KAAP;AANJ;AAQH;;AAED,SAASG,WAAT,GAAwB;AAAA,oBAEYT,UAAU,CAACK,YAAD,EAAe,CAAf,CAFtB;AAAA,MAEbK,KAFa;AAAA,MAENC,aAFM;;AAAA,kBAGIZ,QAAQ,CAAC,OAAD,CAHZ;AAAA,MAGba,IAHa;AAAA,MAGPC,OAHO;;AAKpB,MAAMC,MAAM,GAAG;AACXC,IAAAA,IAAI,qBAAcL,KAAd,CADO;AAEXM,IAAAA,KAAK,EAAEN,KAAK,GAAG,CAAR,GAAY,KAAZ,GAAoB;AAFhB,GAAf;AAOA,SACI,4BACI;AAAO,IAAA,KAAK,EAAEE,IAAd;AAAoB,IAAA,QAAQ,EAAE,kBAACK,CAAD,EAAK;AAACJ,MAAAA,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB;AAA5D,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,mBAAI;AAACR,MAAAA,aAAa,CAAC;AAACH,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAb;AAA6B;AAAnD,KAAsDE,KAAtD,CAFJ,EAIG,MAAC,KAAD;AACC,IAAA,MAAM,EAAEI,MADT;AAEC,IAAA,aAAa,EAAE;AAAA,aAAKH,aAAa,CAAC;AAACH,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAlB;AAAA;AAFhB,IAJH,CADJ;AAYH;;AAED,SAASY,KAAT,OAA0C;AAAA,MAAzBC,aAAyB,QAAzBA,aAAyB;AAAA,MAAVP,MAAU,QAAVA,MAAU;AACtCQ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SACI;AAAQ,IAAA,OAAO,EAAEF,aAAjB;AAAgC,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAEF,MAAM,CAACE;AAAhB;AAAvC,KAAiEF,MAAM,CAACC,IAAxE,CADJ;AAGH;;AAED,eAAeN,WAAf","sourcesContent":["import Head from 'next/head'\r\n\r\nimport React, { \r\n    useState, \r\n    useReducer, \r\n    useContext, \r\n    useLayoutEffect, \r\n    useEffect,\r\n    useRef\r\n} from 'react'\r\n\r\n\r\n\r\nfunction countReducer (state, action) {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return state + 1\r\n        case 'minus':\r\n            return state -1\r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nfunction MyCountFunc () {\r\n\r\n    const [count, dispatchCount ] = useReducer(countReducer, 0)\r\n    const [name, setName] = useState('Jokcy')\r\n\r\n    const config = {\r\n        text: `Count is ${count}`,\r\n        color: count > 3 ? 'red' : 'blue'\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <input value={name} onChange={(e)=>{setName(e.target.value)}} />\r\n            <button onClick={()=>{dispatchCount({type: 'add'})}}>{count}</button>\r\n\r\n           <Child \r\n            config={config}\r\n            onButtonClick={()=> dispatchCount({type: 'add'})}\r\n            />\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nfunction Child({ onButtonClick, config }) {\r\n    console.log('child render')\r\n    return (\r\n        <button onClick={onButtonClick} style={{ color: config.color }}>{config.text}</button>\r\n    )\r\n}\r\n\r\nexport default MyCountFunc\r\n\r\n"]},"metadata":{},"sourceType":"module"}