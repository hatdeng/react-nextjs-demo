{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\n\nvar MyCount =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyCount, _React$Component);\n\n  function MyCount() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyCount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyCount)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(MyCount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        _this2.setState({\n          count: _this2.state.count + 1\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, this.state.count);\n    }\n  }]);\n\n  return MyCount;\n}(React.Component);\n\nexport default MyCount;\n/* export default ()=>{\r\n    return (\r\n        <>\r\n            This is page b\r\n        </>\r\n    )\r\n} */","map":{"version":3,"sources":["D:/react/nextjs-project/pages/test/b.js"],"names":["Head","React","useState","useEffect","MyCount","count","interval","setInterval","setState","state","clearInterval","Component"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;IAEMC,O;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;;wCAIY;AAAA;;AAChB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAI;AAC5B,QAAA,MAAI,CAACC,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAE,MAAI,CAACI,KAAL,CAAWJ,KAAX,GAAmB;AAA3B,SAAd;AACH,OAF0B,EAExB,IAFwB,CAA3B;AAGH;;;2CACuB;AACpB,UAAG,KAAKC,QAAR,EAAkB;AACdI,QAAAA,aAAa,CAAC,KAAKJ,QAAN,CAAb;AACH;AACJ;;;6BACS;AACN,aACI,4BACK,KAAKG,KAAL,CAAWJ,KADhB,CADJ;AAKH;;;;EArBiBJ,KAAK,CAACU,S;;AAyB5B,eAAeP,OAAf;AAEA","sourcesContent":["import Head from 'next/head'\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nclass MyCount extends React.Component {\r\n    state = {\r\n        count: 0\r\n    }\r\n\r\n    componentDidMount (){\r\n        this.interval = setInterval(()=>{\r\n            this.setState({count: this.state.count + 1 })\r\n        }, 1000)\r\n    }\r\n    componentWillUnmount () {\r\n        if(this.interval) {\r\n            clearInterval(this.interval)\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <>\r\n                {this.state.count}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MyCount\r\n\r\n/* export default ()=>{\r\n    return (\r\n        <>\r\n            This is page b\r\n        </>\r\n    )\r\n} */"]},"metadata":{},"sourceType":"module"}