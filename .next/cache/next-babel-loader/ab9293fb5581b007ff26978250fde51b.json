{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useReducer, useContext, useLayoutEffect, useEffect } from 'react';\nimport Mycontext from '../../lib/my-context';\n\nvar MyCount =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyCount, _React$Component);\n\n  function MyCount() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyCount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyCount)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      count: 0\n    });\n\n    return _this;\n  }\n\n  _createClass(MyCount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        _this2.setState({\n          count: _this2.state.count + 1\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, this.state.count);\n    }\n  }]);\n\n  return MyCount;\n}(React.Component);\n\nfunction countReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1;\n\n    case 'minus':\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nfunction MyCountFunc() {\n  //const [count, setCount] = useState(0) // [a, b]\n  var _useReducer = useReducer(countReducer, 0),\n      count = _useReducer[0],\n      dispatchCount = _useReducer[1];\n\n  var _useState = useState('Jokcy'),\n      name = _useState[0],\n      setName = _useState[1];\n  /* useEffect(()=>{\r\n      const interval = setInterval(()=>{\r\n          //setCount(c => c + 1)\r\n          dispatchCount(count, add)\r\n      }, 1000)\r\n        return ()=> clearInterval(interval)\r\n  }, []) */\n  // 会在属性更新后dom更新之后更新,更新HTML之后\n\n\n  useEffect(function () {\n    console.log(\"effect ivvoked\");\n    return function () {\n      console.log('effect deteched');\n    };\n  }, [count]); // 会在属性更新后dom更新之前更新, 更新HTML之前\n\n  useLayoutEffect(function () {\n    console.log(\"useLayoutEffect ivvoked\");\n    return function () {\n      console.log('useLayoutEffect deteched');\n    };\n  }, [count]);\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    value: name,\n    onChange: function onChange(e) {\n      setName(e.target.value);\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      dispatchCount({\n        type: 'add'\n      });\n    }\n  }, count));\n}\n\nexport default MyCountFunc;\n/* export default ()=>{\r\n    return (\r\n        <>\r\n            This is page b\r\n        </>\r\n    )\r\n} */","map":{"version":3,"sources":["D:/react/nextjs-project/pages/test/b.js"],"names":["Head","React","useState","useReducer","useContext","useLayoutEffect","useEffect","Mycontext","MyCount","count","interval","setInterval","setState","state","clearInterval","Component","countReducer","action","type","MyCountFunc","dispatchCount","name","setName","console","log","e","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,UAAtC,EAAkDC,eAAlD,EAAmEC,SAAnE,QAAoF,OAApF;AAEA,OAAOC,SAAP,MAAsB,sBAAtB;;IAEMC,O;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;;wCAIY;AAAA;;AAChB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAI;AAC5B,QAAA,MAAI,CAACC,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAE,MAAI,CAACI,KAAL,CAAWJ,KAAX,GAAmB;AAA3B,SAAd;AACH,OAF0B,EAExB,IAFwB,CAA3B;AAGH;;;2CACuB;AACpB,UAAG,KAAKC,QAAR,EAAkB;AACdI,QAAAA,aAAa,CAAC,KAAKJ,QAAN,CAAb;AACH;AACJ;;;6BACS;AACN,aACI,4BACK,KAAKG,KAAL,CAAWJ,KADhB,CADJ;AAKH;;;;EArBiBR,KAAK,CAACc,S;;AAwB5B,SAASC,YAAT,CAAuBH,KAAvB,EAA8BI,MAA9B,EAAsC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAOL,KAAK,GAAG,CAAf;;AACJ,SAAK,OAAL;AACI,aAAOA,KAAK,GAAE,CAAd;;AACJ;AACA,aAAOA,KAAP;AANJ;AAQH;;AAED,SAASM,WAAT,GAAwB;AACpB;AADoB,oBAGYhB,UAAU,CAACa,YAAD,EAAe,CAAf,CAHtB;AAAA,MAGbP,KAHa;AAAA,MAGNW,aAHM;;AAAA,kBAIIlB,QAAQ,CAAC,OAAD,CAJZ;AAAA,MAIbmB,IAJa;AAAA,MAIPC,OAJO;AAKpB;;;;;;;AAQC;;;AACDhB,EAAAA,SAAS,CAAC,YAAI;AACViB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAO,YAAK;AAACD,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAA+B,KAA5C;AACH,GAHQ,EAGP,CAACf,KAAD,CAHO,CAAT,CAdoB,CAkBpB;;AACAJ,EAAAA,eAAe,CAAC,YAAI;AAChBkB,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,WAAO,YAAK;AAACD,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAAwC,KAArD;AACH,GAHc,EAGb,CAACf,KAAD,CAHa,CAAf;AAMA,SACI,4BACI;AAAO,IAAA,KAAK,EAAEY,IAAd;AAAoB,IAAA,QAAQ,EAAE,kBAACI,CAAD,EAAK;AAACH,MAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB;AAA5D,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,mBAAI;AAACP,MAAAA,aAAa,CAAC;AAACF,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAb;AAA6B;AAAnD,KAAsDT,KAAtD,CAFJ,CADJ;AAOH;;AAED,eAAeU,WAAf;AAEA","sourcesContent":["import Head from 'next/head'\r\n\r\nimport React, { useState, useReducer, useContext, useLayoutEffect, useEffect } from 'react'\r\n\r\nimport Mycontext from '../../lib/my-context'\r\n\r\nclass MyCount extends React.Component {\r\n    state = {\r\n        count: 0\r\n    }\r\n\r\n    componentDidMount (){\r\n        this.interval = setInterval(()=>{\r\n            this.setState({count: this.state.count + 1 })\r\n        }, 1000)\r\n    }\r\n    componentWillUnmount () {\r\n        if(this.interval) {\r\n            clearInterval(this.interval)\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <>\r\n                {this.state.count}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction countReducer (state, action) {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return state + 1\r\n        case 'minus':\r\n            return state -1\r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nfunction MyCountFunc () {\r\n    //const [count, setCount] = useState(0) // [a, b]\r\n\r\n    const [count, dispatchCount ] = useReducer(countReducer, 0)\r\n    const [name, setName] = useState('Jokcy')\r\n    /* useEffect(()=>{\r\n        const interval = setInterval(()=>{\r\n            //setCount(c => c + 1)\r\n            dispatchCount(count, add)\r\n        }, 1000)\r\n\r\n        return ()=> clearInterval(interval)\r\n    }, []) */\r\n     // 会在属性更新后dom更新之后更新,更新HTML之后\r\n    useEffect(()=>{\r\n        console.log(\"effect ivvoked\")\r\n        return ()=> {console.log('effect deteched')}\r\n    },[count])\r\n    // 会在属性更新后dom更新之前更新, 更新HTML之前\r\n    useLayoutEffect(()=>{\r\n        console.log(\"useLayoutEffect ivvoked\")\r\n        return ()=> {console.log('useLayoutEffect deteched')}\r\n    },[count])\r\n\r\n\r\n    return (\r\n        <>\r\n            <input value={name} onChange={(e)=>{setName(e.target.value)}} />\r\n            <button onClick={()=>{dispatchCount({type: 'add'})}}>{count}</button>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyCountFunc\r\n\r\n/* export default ()=>{\r\n    return (\r\n        <>\r\n            This is page b\r\n        </>\r\n    )\r\n} */"]},"metadata":{},"sourceType":"module"}