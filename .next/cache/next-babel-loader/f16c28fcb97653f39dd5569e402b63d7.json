{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { connect } from 'react-redux'; //import store from '../store/store'\n\nvar events = ['routeChangeStart', 'routeChangeComplete', 'routeChangeError', 'beforeHistoryChange', 'hashChangeStart', 'hashChangeComplete'];\n\nfunction makeEvent(type) {\n  return function () {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (_console = console).log.apply(_console, [type].concat(args));\n  };\n}\n\nevents.forEach(function (event) {\n  Router.events.on(event, makeEvent(event));\n});\n\nvar Index = function Index(_ref) {\n  var counter = _ref.counter,\n      username = _ref.username;\n\n  function goToTestB() {\n    Router.push({\n      pathname: '/test/b',\n      query: {\n        id: 2\n      }\n    }, 'test/b/2');\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"br\", null), \"bofore boday\", __jsx(\"br\", null), __jsx(\"span\", {\n    className: \"test\"\n  }, \"Index\"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"br\", null), \"This is index page \", __jsx(_Button, {\n    className: \"primary\"\n  }, \"Button Click me\"), __jsx(\"br\", null), __jsx(\"p\", null, __jsx(Link, {\n    href: \"/a?id=10000\",\n    as: \"/a/10000\"\n  }, __jsx(\"a\", null, __jsx(\"span\", null, \"This is a link to a\"), __jsx(\"i\", null, \"This is a link to a\"), \"go to AAA\"))), __jsx(_Button, {\n    onClick: goToTestB\n  }, \" Test b\"), __jsx(\"br\", null), __jsx(\"span\", null, \"count: \", counter), __jsx(\"br\", null), __jsx(\"span\", null, \"username: \", username), __jsx(\"br\", null));\n};\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    counter: state.counter.count,\n    username: state.user.username\n  };\n}, function mapDidpatchToPros() {\n  return {\n    add: function add(num) {\n      return dispatch({\n        type: 'ADD',\n        num: num\n      });\n    },\n    rename: function rename(name) {\n      return dispath({\n        type: 'UPDATE_USERNAME',\n        name: name\n      });\n    }\n  };\n})(Index);","map":{"version":3,"sources":["D:/react/nextjs-project/pages/index.js"],"names":["Link","Router","connect","events","makeEvent","type","args","console","log","forEach","event","on","Index","counter","username","goToTestB","push","pathname","query","id","mapStateToProps","state","count","user","mapDidpatchToPros","add","num","dispatch","rename","name","dispath"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,IAAMC,MAAM,GAAG,CACX,kBADW,EAEX,qBAFW,EAGX,kBAHW,EAIX,qBAJW,EAKX,iBALW,EAMX,oBANW,CAAf;;AASA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,SAAO,YAAa;AAAA;;AAAA,sCAATC,IAAS;AAATA,MAAAA,IAAS;AAAA;;AAChB,gBAAAC,OAAO,EAACC,GAAR,kBAAYH,IAAZ,SAAqBC,IAArB;AACH,GAFD;AAGH;;AAEDH,MAAM,CAACM,OAAP,CAAe,UAAAC,KAAK,EAAG;AACnBT,EAAAA,MAAM,CAACE,MAAP,CAAcQ,EAAd,CAAiBD,KAAjB,EAAwBN,SAAS,CAACM,KAAD,CAAjC;AACH,CAFD;;AAIA,IAAME,KAAK,GAAI,SAATA,KAAS,OAAuB;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAClC,WAASC,SAAT,GAAsB;AAClBd,IAAAA,MAAM,CAACe,IAAP,CAAY;AACRC,MAAAA,QAAQ,EAAE,SADF;AAERC,MAAAA,KAAK,EAAC;AACFC,QAAAA,EAAE,EAAE;AADF;AAFE,KAAZ,EAKG,UALH;AAMH;;AACD,SACI,4BACI,iBADJ,kBAGI,iBAHJ,EAII;AAAM,IAAA,SAAS,EAAC;AAAhB,aAJJ,EAKI,iBALJ,EAMI,iBANJ,EAOI,iBAPJ,EAQI,iBARJ,EASI,iBATJ,yBAUuB;AAAQ,IAAA,SAAS,EAAC;AAAlB,uBAVvB,EAU2E,iBAV3E,EAWI,iBACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAC;AAA5B,KACI,iBACA,0CADA,EAEA,uCAFA,cADJ,CADJ,CAXJ,EAqBI;AAAQ,IAAA,OAAO,EAAEJ;AAAjB,eArBJ,EAsBI,iBAtBJ,EAuBI,+BAAcF,OAAd,CAvBJ,EAuBiC,iBAvBjC,EAwBI,kCAAiBC,QAAjB,CAxBJ,EA0BI,iBA1BJ,CADJ;AA8BH,CAvCD;;AAwCA,eAAeZ,OAAO,CAAC,SAASkB,eAAT,CAAyBC,KAAzB,EAA+B;AAClD,SAAO;AACHR,IAAAA,OAAO,EAAEQ,KAAK,CAACR,OAAN,CAAcS,KADpB;AAEHR,IAAAA,QAAQ,EAAEO,KAAK,CAACE,IAAN,CAAWT;AAFlB,GAAP;AAIH,CALqB,EAKnB,SAASU,iBAAT,GAA4B;AAC3B,SAAQ;AACJC,IAAAA,GAAG,EAAE,aAACC,GAAD;AAAA,aAASC,QAAQ,CAAC;AAACtB,QAAAA,IAAI,EAAE,KAAP;AAAcqB,QAAAA,GAAG,EAAHA;AAAd,OAAD,CAAjB;AAAA,KADD;AAEJE,IAAAA,MAAM,EAAE,gBAACC,IAAD;AAAA,aAAUC,OAAO,CAAC;AAACzB,QAAAA,IAAI,EAAE,iBAAP;AAA0BwB,QAAAA,IAAI,EAAJA;AAA1B,OAAD,CAAjB;AAAA;AAFJ,GAAR;AAIH,CAVqB,CAAP,CAUZjB,KAVY,CAAf","sourcesContent":["import Link from 'next/link'\r\nimport { Button } from \"antd\"\r\nimport Router from 'next/router'\r\nimport { connect } from 'react-redux'\r\n//import store from '../store/store'\r\n\r\nconst events = [\r\n    'routeChangeStart',\r\n    'routeChangeComplete',\r\n    'routeChangeError',\r\n    'beforeHistoryChange',\r\n    'hashChangeStart',\r\n    'hashChangeComplete',\r\n]\r\n\r\nfunction makeEvent(type) {\r\n    return (...args) => {\r\n        console.log(type, ...args)\r\n    }\r\n}\r\n\r\nevents.forEach(event =>{\r\n    Router.events.on(event, makeEvent(event))\r\n})\r\n\r\nconst Index =  ({counter, username})=>{\r\n    function goToTestB () {\r\n        Router.push({\r\n            pathname: '/test/b',\r\n            query:{\r\n                id: 2\r\n            }\r\n        }, 'test/b/2')\r\n    }\r\n    return (\r\n        <>  \r\n            <br />\r\n            bofore boday\r\n            <br />\r\n            <span className=\"test\">Index</span>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            This is index page <Button className=\"primary\">Button Click me</Button><br />\r\n            <p>\r\n                <Link href=\"/a?id=10000\" as=\"/a/10000\">\r\n                    <a>\r\n                    <span>This is a link to a</span>\r\n                    <i>This is a link to a</i>\r\n                    go to AAA\r\n                    </a>\r\n                </Link>\r\n            </p>\r\n\r\n            <Button onClick={goToTestB}> Test b</Button>\r\n            <br />\r\n            <span>count: {counter}</span><br />\r\n            <span>username: {username}</span>\r\n\r\n            <br />\r\n        </>\r\n    )\r\n}\r\nexport default connect(function mapStateToProps(state){\r\n    return {\r\n        counter: state.counter.count,\r\n        username: state.user.username,\r\n    }\r\n}, function mapDidpatchToPros(){\r\n    return  {\r\n        add: (num) => dispatch({type: 'ADD', num}),\r\n        rename: (name) => dispath({type: 'UPDATE_USERNAME', name}),\r\n    }\r\n})(Index)"]},"metadata":{},"sourceType":"module"}